{"version":3,"sources":["components/Form/index.js","components/Filter/index.js","components/ContactList/index.js","App.js","index.js"],"names":["Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleInputChange","event","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","htmlFor","type","placeholder","onChange","id","pattern","title","required","Component","Filter","onFilter","useState","filter","setFilter","ContactList","filteredContacts","onDeleteContact","length","className","map","onClick","App","contacts","formSubmitHandler","some","alert","filterHandler","deleteUserHandler","contactId","localStorageCantactsArray","localStorage","getItem","JSON","parse","contactsToLocalStorage","stringify","setItem","normalizedFilter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"upBAwEeA,E,4MApEbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAExBE,kBAAoB,SAACC,GAAW,IAAD,EACLA,EAAMC,OAAtBR,EADqB,EACrBA,KAAMS,EADe,EACfA,MAEd,EAAKC,SAAL,eACGV,EAAOS,K,EAIZE,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKhB,OACzB,EAAKiB,S,EAGPA,MAAQ,WACN,EAAKN,SAAS,CACZV,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,OACE,mCACE,uBAAMc,SAAUE,KAAKN,aAArB,UACE,uBAAOO,QAAQ,OAAf,SACE,uBACEC,KAAK,OACLC,YAAY,OACZC,SAAUJ,KAAKX,kBACfN,KAAK,OACLS,MAAOQ,KAAKlB,MAAMC,KAClBsB,GAAG,OACHC,QAAQ,yHACRC,MAAM,0KACNC,UAAQ,MAIZ,uBAAOP,QAAQ,SAAf,SACE,uBACEC,KAAK,MACLC,YAAY,SACZC,SAAUJ,KAAKX,kBACfN,KAAK,SACLS,MAAOQ,KAAKlB,MAAME,OAClBqB,GAAG,SACHC,QAAQ,+FACRC,MAAM,gIACNC,UAAQ,MAIZ,wBAAQN,KAAK,SAAb,kC,GA9DSO,a,QC0BJC,EA1BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACHC,mBAAS,IADN,mBACxBC,EADwB,KAChBC,EADgB,KAY/B,OACE,8BACE,uBACEZ,KAAK,OACLC,YAAY,iBACZpB,KAAK,SACLS,MAAOqB,EACPT,SAZqB,SAACd,IAJF,SAACA,GACzBwB,EAAUxB,EAAMC,OAAOC,OAIvBH,CAAkBC,GAClBqB,EAASrB,SCiBEyB,EA7BK,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,iBAAkBC,EAAsB,EAAtBA,gBACvC,OACE,mCACGD,IAAmBE,OAClB,oBAAIC,UAAU,eAAd,SACGH,IAAmBI,KAAI,YAA2B,IAAxBrC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQqB,EAAS,EAATA,GACvC,OACE,+BACE,oBAAGc,UAAU,eAAb,UACE,+BAAOpC,IACP,+BAAOC,OAET,wBACEmC,UAAU,gBACVE,QAAS,kBAAMJ,EAAgBZ,IAFjC,sBALOtB,QAgBf,yD,QCwDOuC,E,4MArEbxC,MAAQ,CACNyC,SAAUA,EACVV,OAAQ,I,EAiBVW,kBAAoB,YAAuB,IAApBzC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACvB,EAAKF,MAAMyC,SAASE,MAAK,SAAC9B,GAAD,OAAOA,EAAEZ,OAASA,KAC7C2C,MAAM,GAAD,OAAI3C,EAAJ,6BAEL,EAAKU,UAAS,YAAmB,IAAhB8B,EAAe,EAAfA,SACf,MAAO,CACLA,SAAS,GAAD,mBAAMA,GAAN,CAAgB,CAAExC,OAAMC,SAAQqB,GAAInB,IAAQC,mB,EAM5DwC,cAAgB,SAACrC,GACf,EAAKG,UAAS,iBAAO,CACnBoB,OAAQvB,EAAMC,OAAOC,W,EAIzBoC,kBAAoB,SAACC,GACnB,EAAKpC,UAAS,kBAAmB,CAC/B8B,SADY,EAAGA,SACIV,QAAO,qBAAGR,KAAgBwB,U,uDAlCjD,WACE,IAAMC,EAA4BC,aAAaC,QAAQ,YACvDhC,KAAKP,SAAS,CACZ8B,SAAUU,KAAKC,MAAMJ,GACjBG,KAAKC,MAAMJ,GACX9B,KAAKlB,MAAMyC,a,gCAInB,WACE,IAAMY,EAAyBF,KAAKG,UAAUpC,KAAKlB,MAAMyC,UACzDQ,aAAaM,QAAQ,WAAYF,K,oBA2BnC,WAAU,IAAD,OAWP,OACE,sBAAKhB,UAAU,YAAf,UACE,2CACA,cAAC,EAAD,CAAMrB,SAAUE,KAAKwB,oBACrB,0CACA,cAAC,EAAD,CAAQb,SAAUX,KAAK2B,gBACvB,cAAC,EAAD,CACEX,iBAjBmB,WAAO,IAAD,EACA,EAAKlC,MAA1B+B,EADqB,EACrBA,OAAQU,EADa,EACbA,SACVe,EAAmBzB,EAAO0B,cAMhC,OALsBhB,EAASV,QAC7B,gBAAG9B,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACED,EAAKwD,cAAcC,SAASF,IAC5BtD,EAAOuD,cAAcC,SAASF,OAY9BrB,gBAAiBjB,KAAK4B,2B,GA/DdnB,aCJlBgC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IADF,OAGAC,SAASC,eAAe,W","file":"static/js/main.e851f129.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              onChange={this.handleInputChange}\n              name=\"name\"\n              value={this.state.name}\n              id=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n\n          <label htmlFor=\"number\">\n            <input\n              type=\"tel\"\n              placeholder=\"Number\"\n              onChange={this.handleInputChange}\n              name=\"number\"\n              value={this.state.number}\n              id=\"number\"\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n              title=\"The phone number must be 11-12 digits long and can contain numbers, spaces, dashes, pot-bellied brackets and can start with +\"\n              required\n            />\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Form;\n","import { useState } from \"react\";\n// import { debounce } from \"debounce\";\n\nconst Filter = ({ onFilter }) => {\n  const [filter, setFilter] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const filterInputHandler = (event) => {\n    handleInputChange(event);\n    onFilter(event);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"search contact\"\n        name=\"filter\"\n        value={filter}\n        onChange={filterInputHandler}\n        // onBlur={() => setFilter(\"\")}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","const ContactList = ({ filteredContacts, onDeleteContact }) => {\n  return (\n    <>\n      {filteredContacts().length ? (\n        <ol className=\"contact-list\">\n          {filteredContacts().map(({ name, number, id }) => {\n            return (\n              <li key={name}>\n                <p className=\"contact-text\">\n                  <span>{name}</span>\n                  <span>{number}</span>\n                </p>\n                <button\n                  className=\"delete-button\"\n                  onClick={() => onDeleteContact(id)}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ol>\n      ) : (\n        <p>Contact list is empty</p>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nimport contacts from \"./data/contacts.json\";\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const localStorageCantactsArray = localStorage.getItem(\"contacts\");\n    this.setState({\n      contacts: JSON.parse(localStorageCantactsArray)\n        ? JSON.parse(localStorageCantactsArray)\n        : this.state.contacts,\n    });\n  }\n\n  componentDidUpdate() {\n    const contactsToLocalStorage = JSON.stringify(this.state.contacts);\n    localStorage.setItem(\"contacts\", contactsToLocalStorage);\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    if (this.state.contacts.some((e) => e.name === name)) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      this.setState(({ contacts }) => {\n        return {\n          contacts: [...contacts, { name, number, id: shortid.generate() }],\n        };\n      });\n    }\n  };\n\n  filterHandler = (event) => {\n    this.setState(() => ({\n      filter: event.target.value,\n    }));\n  };\n\n  deleteUserHandler = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  render() {\n    const filteredContacts = () => {\n      const { filter, contacts } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      const filteredArray = contacts.filter(\n        ({ name, number }) =>\n          name.toLowerCase().includes(normalizedFilter) ||\n          number.toLowerCase().includes(normalizedFilter)\n      );\n      return filteredArray;\n    };\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter onFilter={this.filterHandler} />\n        <ContactList\n          filteredContacts={filteredContacts}\n          onDeleteContact={this.deleteUserHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}