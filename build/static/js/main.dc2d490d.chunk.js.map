{"version":3,"sources":["components/Form/index.js","components/Filter/index.js","components/ContactList/index.js","App.js","index.js"],"names":["Form","onSubmit","useState","name","number","contact","setContact","handleInputChange","event","target","value","reset","preventDefault","htmlFor","type","placeholder","onChange","id","pattern","title","required","Filter","onFilter","filter","setFilter","ContactList","filteredContacts","onDeleteContact","length","className","map","onClick","App","data","contacts","setContacts","useEffect","localStorageCantactsArray","localStorage","getItem","JSON","parse","contactsToLocalStorage","stringify","setItem","some","alert","shortid","generate","normalizedFilter","toLowerCase","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc2d490d.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Form = ({ onSubmit }) => {\n  const [contact, setContact] = useState({\n    name: \"\",\n    number: \"\",\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    setContact({\n      ...contact,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setContact({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            onChange={handleInputChange}\n            name=\"name\"\n            value={contact.name}\n            id=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label htmlFor=\"number\">\n          <input\n            type=\"tel\"\n            placeholder=\"Number\"\n            onChange={handleInputChange}\n            name=\"number\"\n            value={contact.number}\n            id=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"The phone number must be 11-12 digits long and can contain numbers, spaces, dashes, pot-bellied brackets and can start with +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </>\n  );\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ onFilter }) => {\n  const [filter, setFilter] = useState(\"\");\n\n  const handleInputChange = ({ value }) => {\n    setFilter(value);\n  };\n\n  const filterInputHandler = (event) => {\n    handleInputChange(event.target);\n    onFilter(event.target.value);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"search contact\"\n        name=\"filter\"\n        value={filter}\n        onChange={filterInputHandler}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\n\nconst ContactList = ({ filteredContacts, onDeleteContact }) => {\n  return (\n    <>\n      {filteredContacts().length ? (\n        <ol className=\"contact-list\">\n          {filteredContacts().map(({ name, number, id }) => {\n            return (\n              <li key={name}>\n                <p className=\"contact-text\">\n                  <span>{name}</span>\n                  <span>{number}</span>\n                </p>\n                <button\n                  className=\"delete-button\"\n                  onClick={() => onDeleteContact(id)}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ol>\n      ) : (\n        <p>Contact list is empty</p>\n      )}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.func.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\n\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nimport data from \"./data/contacts.json\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState(data);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const localStorageCantactsArray = localStorage.getItem(\"contacts\");\n    setContacts(\n      JSON.parse(localStorageCantactsArray)\n        ? JSON.parse(localStorageCantactsArray)\n        : contacts\n    );\n  }, []);\n\n  useEffect(() => {\n    const contactsToLocalStorage = JSON.stringify(contacts);\n    localStorage.setItem(\"contacts\", contactsToLocalStorage);\n  });\n\n  const formSubmitHandler = ({ name, number }) => {\n    if (contacts.some((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      setContacts([...contacts, { name, number, id: shortid.generate() }]);\n    }\n  };\n\n  const filterHandler = (value) => {\n    setFilter(value);\n  };\n\n  const deleteUserHandler = (contactId) => {\n    setContacts(contacts.filter(({ id }) => id !== contactId));\n  };\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    const filteredArray = contacts.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.toLowerCase().includes(normalizedFilter)\n    );\n    return filteredArray;\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <Form onSubmit={formSubmitHandler} />\n      <h2>Contacts</h2>\n      <Filter onFilter={filterHandler} />\n      <ContactList\n        filteredContacts={filteredContacts}\n        onDeleteContact={deleteUserHandler}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}